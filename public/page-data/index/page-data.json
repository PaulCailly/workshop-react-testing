{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","result":{"data":{"deck":{"id":"2e97883c-c223-5d91-a2e0-ffb71775923a","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar themes = [swiss, prism, custom];\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  themes: themes,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"Tester vos composants React avec Jest et React Testing Library\"), mdx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\"\n  }), mdx(\"meta\", {\n    name: \"twitter:title\",\n    content: \"mdx-deck\"\n  }), mdx(\"meta\", {\n    name: \"twitter:description\",\n    content: \"Tester vos composants React avec Jest et React Testing Library\"\n  })), mdx(\"img\", {\n    src: logo,\n    size: \"fit\"\n  }), mdx(\"h1\", null, \"Tester vos composants React avec Jest & React Testing Library\"), mdx(\"p\", null, \"Paul Cailly\"), mdx(\"hr\", null), mdx(\"h1\", null, \"Au programme\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quoi et pourquoi ?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Les types de tests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Les outils pour \\xE9crire les tests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Live coding\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Qu'est ce qu'un test ?\"), mdx(\"p\", null, \"Du code \\xE9crit pour v\\xE9rifier le bon fonctionnement de votre application\"), mdx(\"img\", {\n    src: what,\n    style: {\n      maxWidth: \"420px\"\n    }\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Pourquoi \\xE9crire des tests ?\"), mdx(\"p\", null, \"Tester c'est douter, non ?\"), mdx(\"img\", {\n    src: why,\n    style: {\n      maxWidth: \"420px\"\n    }\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Documentation\"), mdx(\"p\", null, \"Les tests sont la sp\\xE9cification de comment notre code fonctionne\"), mdx(\"img\", {\n    src: documentation,\n    style: {\n      maxWidth: \"420px\"\n    }\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Consistence\"), mdx(\"p\", null, \"V\\xE9rifier que les autres developeurs suivent les bonnes pratiques et les conventions de votre \\xE9quipe\"), mdx(\"img\", {\n    src: consistency,\n    style: {\n      maxWidth: \"420px\"\n    }\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Confiance\"), mdx(\"p\", null, \"Une suite de tests solide assure un processus d'it\\xE9ration sain\"), mdx(\"img\", {\n    src: confidence,\n    style: {\n      maxWidth: \"420px\"\n    }\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Productivit\\xE9\"), mdx(\"p\", null, \"Ecrire des tests permet de d\\xE9livrer du code de qualit\\xE9 rapidement\"), mdx(\"img\", {\n    src: productivity,\n    style: {\n      maxWidth: \"420px\"\n    }\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Les types de tests\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"End-to-End\"), \": Lancer votre App et simuler le comportement de l'utilisateur final le plus fid\\xE9lement possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Integration\"), \": V\\xE9rifier que plusieurs composants fonctionnent correctement ensemble\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Unit\"), \": V\\xE9rifier la fonctionnalit\\xE9 d'un composant ou d'une fonction en particulier\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Static\"), \": Trouver les erreurs au moment d'\\xE9crire le code (ESLint, TypeScript, Flow, ...)\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Un simple test\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const expected = true;\\nconst actual = false;\\n\\nif (actual !== expected) {\\n  throw new Error(`${actual} is not ${expected}`);\\n}\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Un output peu utile\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"node tests/basic.test.js\\n/Users/pcailly/dev/workshop-react-testing/tests/basic.test.js:5\\nthrow new Error(`${actual} is not ${expected}`);\\n^\\n\\nError: true is not false\\n  at Object.<anonymous> (/Users/pcailly/dev/workshop-react-testing/tests/basic.test.js:5:9)\\n  at Module._compile (internal/modules/cjs/loader.js:776:30)\\n  at Object.Module._extensions..js (internal/modules/cjs/loader.js:787:10)\\n  at Module.load (internal/modules/cjs/loader.js:653:32)\\n  at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\\n  at Function.Module._load (internal/modules/cjs/loader.js:585:3)\\n  at Function.Module.runMain (internal/modules/cjs/loader.js:829:12)\\n  at startup (internal/bootstrap/node.js:283:19)\\n  at bootstrapNodeJSCore (internal/bootstrap/node.js:622:3)\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Un test avec Jest\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const expected = true;\\nconst actual = false;\\n\\ntest(\\\"it works\\\", () => {\\n  expect(actual).toBe(expected);\\n});\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Un output plus utile\"), mdx(\"img\", {\n    src: jest,\n    style: {\n      maxWidth: \"1260px\"\n    }\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Questions ?\"), mdx(\"p\", null, \"Avant de passer au live coding\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","isCreatedByStatefulCreatePages":false,"id":"2e97883c-c223-5d91-a2e0-ffb71775923a","slug":"","title":"Tester vos composants React avec Jest & React Testing Library"}}}